import logging
from textblob import Word
from params import timeit

enable_inference_caching = True


class SpellCheckerTextBlob:
    def __init__(self):
        self.corrected_text = {}
        self._words = {
            "correct_words": [],
            "incorrect_words": [],
            "corrected_words": []
        }

    @timeit
    def check_spelling(self, sentence):
        corrected_words = []
        words = sentence.split(' ')
        for i, word in enumerate(words):
            corrected_words.append(self.check_word_spelling(word, index=i))

        corrected_text_dict = self.corrected_text
        logging.info("|".join(
            [f"{key}>{value['correction']}?{value['confidence']}" for key, value in corrected_text_dict.items()]))
        self.corrected_text = {}
        return ' '.join(corrected_words), corrected_text_dict

    def check_word_spelling(self, word, *, index=None):
        if enable_inference_caching:
            if word in self._words["correct_words"]:
                return word
            elif word in self._words["incorrect_words"]:
                return self._words["corrected_words"][self._words["incorrect_words"].index(word)]
        word = Word(word)
        result = word.spellcheck()
        correct_word = result[0][0]
        confidence = result[0][1]
        if word != correct_word:
            self._words["incorrect_words"].append(word)
            self._words["corrected_words"].append(correct_word)
            logging.debug(
                f"Correction {f'at index {index}' if index is not None else ''}: '{word}' to '{correct_word}' "
                f"with conf {confidence:.2f}")
            if word not in self.corrected_text:
                self.corrected_text[word] = {"correction": correct_word, "confidence": round(confidence, 2)}
        else:
            self._words["correct_words"].append(word)

        return correct_word


if __name__ == '__main__':
    import time

    spell_checker = SpellCheckerTextBlob()
    sentence = "Administrative Data: Information that is collected by Administrative Data: Information that is collected by other organizations and departments for their own purposes, and is sought, at the micro or aggregate level, by Statistics Canada in respect to the objects of the Statistics Act. It excludes data that do not pertain to Canadian society, economy or environment. By definition, Statistics Canada\u2019s use of this information for statistical purposes is secondary to the objective of the original collector of the information. Administrative data include the traditional sources, for example, various data sets received from the Canada Revenue Agency, and also alternative sources, such as data obtained from surveys conducted by others without Statistics Canada 's involvement and data generated by electronic devices (e.g., satellites, sensors, scanners, mobile phones) that are gathered by other organizations. Exclusions: Administrative data should not be confused with products that may be obtained from other organizations such as publications, reports, guides, metadata and computer programs. They also exclude data or information that is available to the public, including on the Internet, or data that can be obtained, under licence or not, by anyone, with or without a fee.The statistical uses of administrative data are kept functionally separate from the administrative uses of such data through strong legal, policy and organizational safeguards. In particular, the con\ufb01dentiality of all identifiable administrative data obtained by Statistics Canada for statistical purposes is protected by the Statistics Act and the data are only accessed within Statistics Canada based on demonstrated needs. In collaboration with data providers, Statistics Canada uses its mandate under the Statistics Act to access administrative data for statistical purposes, and to influence the information collected by departments of government (including the provinces and territories), in order to enhance the usefulness of administrative data for statistical purposes and reduce duplication. Statistics Canada's objective in using administrative data for statistical purposes is to achieve a better overall balance among cost, respondent burden and data quality, where quality refers to the relevance, accuracy, timeliness, accessibility, interpretability, and coherence of statistical outputs. 5. Administrative data are used for many different statistical purposes: replacing or complementing direct data collection to reduce costs and respondent burden; achieving efficiencies in statistical operations, such as the creation of survey frames, design of survey samples, imputation, estimation, and the measurement of the quality of other data; and developing and providing access to new data products (tabular or analytical), such as by integrating administrative data with other data. 6. Statistics Canada carefully considers the impact on privacy in using"
    ts = time.time()
    for i in range(10):
        sentence += f" {i}"
        _correct_sentence, corrected_text_dict = spell_checker.check_spelling(sentence)
    # print(_correct_sentence)
    # print(corrected_text_dict)
    te = time.time()
    print(f' {round(te - ts, 5)} sec')
